package com.excilys.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.excilys.dto.ComputerDTO;
import com.excilys.model.*;

public class Mapper {
	
	private static Logger logger = LoggerFactory.getLogger("Mapper");
	
	public Mapper() {
		
	}
	
	public List<Computer> dataToListComputer(ResultSet data) throws SQLException{
		
		List<Computer> computers = new ArrayList<Computer>();
		
		while(data.next()) {
			computers.add(this.dataToComputer(data));
		}
		return computers;
	}
	
	public List<Company> dataToListCompany(ResultSet data) throws SQLException{
		
		List<Company> Companies = new ArrayList<Company>();
		while(data.next()) {
			int id = data.getInt(1);
			String name = data.getString(2);
			Companies.add(new Company(id,name));
		}
		return Companies;	
	}
	
	public Computer dataToComputer(ResultSet results) throws SQLException{
		int id1;
		String name;
		LocalDate date=null;
		LocalDate date2=null;
		Company company=null;
		
		id1 = results.getInt(1);
		name = results.getString(2);
		if (results.getDate(3) != null) {
			date = results.getDate(3).toLocalDate();
		}
		if (results.getDate(4) != null) {
			date2 = results.getDate(4).toLocalDate();
		}
		if(results.getString(5)!=null) {
			company = new Company(results.getInt(5),results.getString(7));
		}
		Computer computer = new Computer(id1,name,date,date2,company);
		return computer;
	}		
			
		
	
	public Computer createComputer(ComputerDTO computerDTO) {
		
		String name = computerDTO.getName();
		String date_entry = computerDTO.getDateEntree();
		String date_out = computerDTO.getDateSortie();
		String id = computerDTO.getCompany();
		Computer computer = new Computer();
		
		if(!name.isBlank()) {
			computer.setName(name);
		}else {
			return null;
		}
		
		try {
			computer.setDateEntree(LocalDate.parse(date_entry));
		}
		catch(Exception e) {
			
		}
		
		try {
			computer.setDateEntree(LocalDate.parse(date_out));
		}
		catch(Exception e) {
		}
		
		if(!name.isBlank()) {
			computer.setName(name);
		}else {
			return null;
		}
		
		
		
		
		
		
		
		return computer;	
	}
		

}