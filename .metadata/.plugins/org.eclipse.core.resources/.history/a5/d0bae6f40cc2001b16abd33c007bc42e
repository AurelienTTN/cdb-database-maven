package com.excilys.validator;

import java.time.LocalDate;
import java.time.format.DateTimeParseException;

import com.excilys.dto.ComputerDTO;
import com.excilys.exceptions.FormatDateException;
import com.excilys.exceptions.NameComputerEmpty;
import com.excilys.exceptions.ValidationException;
import com.excilys.persistence.Dao;

public class Validator {
	
	private static Validator instance;
	
	
	private Validator() {
		
	}
	
	
	public static Validator getInstance() {
        if (instance == null) {
            instance = new Validator();
        }
        return instance;
	}

	
	public void validatorDTO (ComputerDTO computerDTO) throws NameComputerEmpty {
		
		
	if(!computerDTO.getName().isBlank()) {
		throw new NameComputerEmpty("L'ordinateur n'a pas de nom indiqué");
	}
		
	String date_entry = computerDTO.getDateEntree();
	
	if(date_entry!=null)
	try {
		LocalDate test = LocalDate.parse(date_entry);
	}
	catch(DateTimeParseException e) {
		throw new FormatDateException("La Date d'entrée à un format invalide");
	}
	
	String date_out = computerDTO.getDateSortie();
	
	if(date_entry!=null)
	try {
		LocalDate test = LocalDate.parse(date_entry);
	}
	catch(DateTimeParseException e) {
		throw new FormatDateException("La Date d'entrée à un format invalide")
	}
	

	
	
	
	
	if((computer.getDateEntree()!=null) && (computer.getDateSortie()!=null)) {
		if(computer.getDateSortie().isBefore(computer.getDateEntree()))
			return null;
	}
	
	
	String id = computerDTO.getCompany();
	
	if(!id.isBlank()) {
		int id_comp = Integer.parseInt(id);
		if(!((id_comp>0)&&(id_comp<44)))
	}
}
